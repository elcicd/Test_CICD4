elCicdChart:
  parameters:
    INSTANCE_1: instance1
    APP_NAME_1: ${MICROSERVICE_NAME}-${INSTANCE_1}
    APP_NAME_2: ${MICROSERVICE_NAME}-instance2
    CONFIG_MAP: configmap
    CPU_UTILIZATION: 90
    MIN_REPLICAS: 1
    MAX_REPLICAS: 3
    TOPIC: topic
    CGROUP: cgroup
    TOPIC_NAME: topicname
    CGROUP_KEY: valueFrom
    CGROUP_VALUE:
      configMapKeyRef:
        key: ${CGROUP}
        name: ${APP_NAME}-${CONFIG_MAP}
    ENV_DEF:
    - name: ${APP_NAME}-${TOPIC_NAME}
      value: ${APP_NAME}-${TOPIC}
    - name: password
      valueFrom:
        secretKeyRef:
          key: password
          name: ${MICROSERVICE_NAME}-sealed-secret
    - name: ${TOPIC_NAME}
      valueFrom:
        configMapKeyRef:
          key: ${TOPIC_NAME}
          name: ${APP_NAME}-${CONFIG_MAP}
    - name: ${CGROUP}
      ${CGROUP_KEY}: ${CGROUP_VALUE}

  parameters-${APP_NAME_2}:
    INSTANCE_2_PORT: 8082
  
  parameters-dev:
    CPU_UTILIZATION: 150
    MAX_REPLICAS: 2
    
  parameters-prod:
    MIN_REPLICAS: 2
    MAX_REPLICAS: 5

  templates:
  - templateName: deploymentService
    appNames:
    - ${APP_NAME_1}
    - ${APP_NAME_2}
    port: ${INSTANCE_2_PORT}
    env: ${ENV_DEF}
    parameters-${APP_NAME_1}-dev:
      CGROUP_KEY: value
      CGROUP_VALUE: patch-test-${SDLC_ENV}-${INSTANCE_1}

  - templateName: ingress
    appNames:
    - ${APP_NAME_1}
    - ${APP_NAME_2}
    port: ${INSTANCE_2_PORT}

  - templateName: horizontalPodAutoscaler
    appName: ${APP_NAME_1}
    maxReplicas: ${MAX_REPLICAS}
    minReplicas: ${MIN_REPLICAS}
    metrics:
    - type: Resource
      name: cpu
      target:
        type: Utilization
        averageUtilization: ${CPU_UTILIZATION}

  - templateName: configMap
    appNames:
    - ${APP_NAME_1}-${CONFIG_MAP}
    - ${APP_NAME_2}-${CONFIG_MAP}
    data:
      ${CGROUP}: ${CGROUP}
      ${TOPIC_NAME}: ${SDLC_ENV}-${APP_NAME}-${TOPIC}
      ${TEST_KEY}: ${TEST_VALUE}
    parameters-${APP_NAME_2}-${CONFIG_MAP}-dev:
      TEST_KEY: my-test-key
      TEST_VALUE: just-for-this-map
    
  - templateName: deploymentService
    appName: postgresql
    anyProfiles:
    - dev
    image: image-registry.openshift-image-registry.svc:5000/openshift/postgresql
    imagePullPolicy: IfNotPresent
    port: 5432
    dnsPolicy: ClusterFirst
    restartPolicy: Always
    schedulerName: default-scheduler
    terminationGracePeriodSeconds: 30
    imagePullSecrets: []
    env:
    - name: POSTGRESQL_USER
      valueFrom:
        secretKeyRef:
          key: database-user
          name: postgresql
    - name: POSTGRESQL_PASSWORD
      valueFrom:
        secretKeyRef:
          key: database-password
          name: postgresql
    - name: POSTGRESQL_DATABASE
      valueFrom:
        secretKeyRef:
          key: database-name
          name: postgresql
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/lib/pgsql/data
      name: postgresql-data
    livenessProbe:
      exec:
        command:
        - /usr/libexec/check-container
        - --live
      failureThreshold: 3
      initialDelaySeconds: 120
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 10
    readinessProbe:
      exec:
        command:
        - /usr/libexec/check-container
      failureThreshold: 3
      initialDelaySeconds: 15
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    limitsCpu: 400m
    limitsMemory: 512Mi
    requestsCpu: 100m
    requestsMemory: 64Mi
    volumes:
    - emptyDir: {}
      name: postgresql-data
